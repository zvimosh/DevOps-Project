
name: Docker

on:
  #push:
  #  branches: ["dev"]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # AWS ENV
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  KOPS_PROVIDER: aws
  KOPS_BUCKET_STATE: kops-foxyandpuff-com-cluster-state
  KOPS_BUCKET_OIDC_STORE: kops-foxyandpuff-com-cluster-oidc-store
  KOPS_CLUSTER_NAME: kops.foxyandpuff.com
  KOPS_DNS_ZONE: kops.foxyandpuff.com
  KOPS_CLUSTER_ZONES: us-east-1a 
  #,us-east-1b,us-east-1c
  KOPS_MASTER_INSTANCE_SIZE: t3.large
  KOPS_NODE_INSTANCE_SIZE: t3.large
  KOPS_NODE_COUNT: 1

permissions:
  contents: read

jobs:
  deploy:
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build the images
        export DOCKER_REPO=$ECR_REGISTRY
        docker build -t $ECR_REGISTRY/hello-world-war:1.0.0 -t $ECR_REGISTRY/hello-world-war:latest .
        docker push $ECR_REGISTRY/hello-world-war:1.0.0
        docker push $ECR_REGISTRY/hello-world-war:latest
        #echo "$GITHUB_OUTPUT"